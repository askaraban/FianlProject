<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="swift.air.mapper.ScheduleMapper">
	<insert id="insertSchedule">
		<selectKey resultType="int" keyProperty="scheduleId" order="BEFORE">
			select schedule_seq.nextval from dual
		</selectKey>
		insert into schedule values(#{scheduleId}, #{scheduleDepartureDate}, #{scheduleArrivalDate}, #{scheduleFlight}, #{scheduleRouteId})
	</insert>
	
	<update id="updateSchedule">
		update schedule set schedule_departure_date=#{scheduleDepartureDate}, schedule_arrival_date=#{scheduleArrivalDate}
			, schedule_flight=#{scheduleFlight}, schedule_route_id=#{scheduleRouteId} where schedule_id=#{scheduleId}
	</update>
	
	<delete id="deleteSchedule">
		delete from schedule where schedule_id=#{scheduleId}
	</delete>
	
	<select id="selectSchedule" resultMap="scheduleResultMap">  
		select schedule_id, schedule_departure_date, schedule_arrival_date, schedule_flight, schedule_route_id 
			from schedule join route on schedule_route_id=route_id where schedule_id=#{scheduleId}
	</select>
	
	<select id="selectScheduleCount" resultType="int">
		select count(*) from schedule
	</select>
	
	<select id="selectScheduleList" resultType="map">
		select * from (select rownum rn, schedulelist.* from (select schedule_id, schedule_departure_date
			, schedule_arrival_date, schedule_flight, schedule_route_id from schedule join route on 
			schedule_route_id=route_id where schedule_route_id=#{schedule_route_id} order by schedule_id desc)
			schedulelist) where rn between #{startRow} and #{endRow}
	</select>
</mapper>