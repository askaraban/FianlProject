<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="swift.air.mapper.EventMapper">
	<!-- 삽입 메소드 -->
	<insert id="insertEvent">
		<selectKey resultType="int" keyProperty="eventId" order="BEFORE">
			select event_seq.nextval from dual
		</selectKey>
		insert into event values(#{eventId}, sysdate, #{eventTitle}, #{eventContent}
			, #{eventImg1}, #{eventImg2}, #{eventStart}, #{eventEnd}, #{eventNotice}, #{eventStatus})
	</insert>
	
	<!-- 수정 메소드 -->
	<update id="updateEvent">
		update event set event_title=#{eventTitle}, event_content=#{eventContent}, event_img1=#{eventImg1}
			, event_img2=#{eventImg2}, event_start=#{eventStart}, event_end=sysdate
			, event_notice=#{eventNotice}, event_status=#{eventStatus} where event_id=#{eventId}
	</update>
	
	<!-- 삭제 메소드 -->
	<delete id="deleteEvent">
		delete from event where event_id=#{eventId}
	</delete>
	
	<!-- 이벤트번호를 전달받아 테이블의 단일행을 검색하여 이벤트글을 반환하는 메소드 -->
	<select id="selectEvent" resultType="Event">  
		select event_id, event_title, event_content, event_img2, event_start
			, event_end, event_notice, event_status from event where event_id=#{eventId}
	</select>
	
	<!-- 이벤트 검색 결과 개수 -->
	<select id="selectEventCount" resultType="int">
		select count(*) from event 
	</select>
	
	<!-- 페이징 처리 관련정보(시작 행번호와 종료 행번호)를 전달받아 Event 테이블에 저장된 행을 검색하여
	이벤트 게시글 목록을 반환하는 메소드 -->
	<select id="selectEventList" resultType="Event">
		select * from (select rownum rn, eventlist.* from (select event_id, event_title
			, event_start, event_end, event_status
			from event order by event_id) eventlist) where rn between #{startRow} and #{endRow}
	</select>

	<!-- 페이징 처리 관련정보(시작 행번호와 종료 행번호)를 전달받아 Event 테이블에 저장된 행을 검색하여
	이벤트 게시글 목록을 반환하는 메소드 -->
	<select id="selectEventListByStatus" resultType="Event">
		select * from (select rownum rn, eventlist.* from (select event_id, event_title
			, event_img1, event_start, event_end, event_status
			from event where event_status=#{eventStatus} order by event_id desc) eventlist) where rn between #{startRow} and #{endRow}
	</select>
	
</mapper>